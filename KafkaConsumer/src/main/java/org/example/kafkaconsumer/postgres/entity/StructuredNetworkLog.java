package org.example.kafkaconsumer.postgres.entity; // New package for PostgreSQL entities

import org.springframework.data.annotation.Id;
import org.springframework.data.relational.core.mapping.Column;
import org.springframework.data.relational.core.mapping.Table;

import java.time.Instant;
import java.util.UUID; // For generating log_id if not from raw data

@Table("network_logs") // Maps this class to the 'network_logs' table in PostgreSQL
public class StructuredNetworkLog {
    @Id
    private Long id; // PostgreSQL auto-generated BIGSERIAL primary key

    @Column("log_id") // application's unique ID for the log in PostgreSQL
    private String logId; // UUID generated when processing from raw log

    @Column("timestamp")
    private Instant timestamp;
    @Column("src_ip")
    private String srcIP;
    @Column("dest_ip")
    private String destIP;
    private long port;
    private String protocol;
    private long bytes;
    private String message;
    @Column("raw_log")
    private String rawLog;

    // Default no-argument constructor
    public StructuredNetworkLog() {
        this.logId = UUID.randomUUID().toString(); // Generate unique logId on creation
    }

    // All-argument constructor (without 'id' as it's auto-generated by DB)
    public StructuredNetworkLog(String srcIP, String destIP, long port, String protocol, long bytes, Instant timestamp, String message, String rawLog) {
        this(); // Call no-arg constructor to generate logId
        this.srcIP = srcIP;
        this.destIP = destIP;
        this.port = port;
        this.protocol = protocol;
        this.bytes = bytes;
        this.timestamp = timestamp;
        this.message = message;
        this.rawLog = rawLog;
    }

    // --- Getters and Setters (REQUIRED for Spring Data JPA/R2DBC) ---
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    public String getLogId() { return logId; }
    public void setLogId(String logId) { this.logId = logId; }
    public Instant getTimestamp() { return timestamp; }
    public void setTimestamp(Instant timestamp) { this.timestamp = timestamp; }
    public String getSrcIP() { return srcIP; }
    public void setSrcIP(String srcIP) { this.srcIP = srcIP; }
    public String getDestIP() { return destIP; }
    public void setDestIP(String destIP) { this.destIP = destIP; }
    public long getPort() { return port; }
    public void setPort(long port) { this.port = port; }
    public String getProtocol() { return protocol; }
    public void setProtocol(String protocol) { this.protocol = protocol; }
    public long getBytes() { return bytes; }
    public void setBytes(long bytes) { this.bytes = bytes; }
    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }
    public String getRawLog() { return rawLog; }
    public void setRawLog(String rawLog) { this.rawLog = rawLog; }

    @Override
    public String toString() {
        return "StructuredNetworkLog{" +
                "id=" + id +
                ", logId='" + logId + '\'' +
                ", timestamp=" + timestamp +
                ", srcIP='" + srcIP + '\'' +
                ", destIP='" + destIP + '\'' +
                ", port=" + port +
                ", protocol='" + protocol + '\'' +
                ", bytes=" + bytes +
                ", message='" + message + '\'' +
                ", rawLog='" + rawLog + '\'' +
                '}';
    }
}