package org.example.kafkaconsumer.postgres.entity; // New package for PostgreSQL entities

import org.springframework.data.annotation.Id;
import org.springframework.data.relational.core.mapping.Column;
import org.springframework.data.relational.core.mapping.Table;

import java.time.Instant;
import java.util.UUID;

import lombok.AllArgsConstructor;
import lombok.Data;

@Data
@AllArgsConstructor
@Table("network_logs") // Maps this class to the 'network_logs' table in PostgreSQL
public class StructuredNetworkLog {
    @Id
    private Long id; // PostgreSQL auto-generated BIGSERIAL primary key

    @Column("log_id") // application's unique ID for the log in PostgreSQL
    private String logId; // UUID generated when processing from raw log

    @Column("timestamp")
    private Instant timestamp;
    @Column("src_ip")
    private String srcIP;
    @Column("dest_ip")
    private String destIP;
    private long port;
    private String protocol;
    private long bytes;
    private String message;
    @Column("raw_log")
    private String rawLog;

    // Default no-argument constructor
    public StructuredNetworkLog() {
        this.logId = UUID.randomUUID().toString(); // Generate unique logId on creation
    }


    // All-argument constructor (without 'id' as it's auto-generated by DB)
    public StructuredNetworkLog(String srcIP, String destIP, long port, String protocol, long bytes, Instant timestamp, String message, String rawLog) {
        this(); // Call no-arg constructor to generate logId
        this.srcIP = srcIP;
        this.destIP = destIP;
        this.port = port;
        this.protocol = protocol;
        this.bytes = bytes;
        this.timestamp = timestamp;
        this.message = message;
        this.rawLog = rawLog;
    }
}