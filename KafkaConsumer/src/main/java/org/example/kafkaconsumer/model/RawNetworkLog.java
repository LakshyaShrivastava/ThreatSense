package org.example.kafkaconsumer.model;

import org.springframework.data.annotation.Id; // For MongoDB's _id
import org.springframework.data.mongodb.core.mapping.Document; // For collection mapping

import java.time.Instant;

@Document(collection = "network_logs") // Maps this class to the 'network_logs' collection in MongoDB
public class RawNetworkLog {
    @Id // Maps to MongoDB's default _id field
    private String id; // MongoDB's _id is typically a String (ObjectId converted to String by driver)

    // These fields directly match the JSON produced by PlainKafkaProducer (Can use annotation tags as well)
    private String srcIP;
    private String destIP;
    private long port;
    private String protocol;
    private long bytes;
    private Instant timestamp;

    private String message;
    private String rawLog;

    // Default no-argument constructor (REQUIRED by Spring Data MongoDB and Jackson)
    public RawNetworkLog() {
    }

    // All-argument constructor (without 'id' as it's auto-generated by MongoDB)
    public RawNetworkLog(String srcIP, String destIP, long port, String protocol, long bytes, Instant timestamp, String message, String rawLog) {
        this.srcIP = srcIP;
        this.destIP = destIP;
        this.port = port;
        this.protocol = protocol;
        this.bytes = bytes;
        this.timestamp = timestamp;
        this.message = message;
        this.rawLog = rawLog;
    }

    // --- Getters and Setters (REQUIRED by Spring Data MongoDB and Jackson) ---
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    public String getSrcIP() { return srcIP; }
    public void setSrcIP(String srcIP) { this.srcIP = srcIP; }
    public String getDestIP() { return destIP; }
    public void setDestIP(String destIP) { this.destIP = destIP; }
    public long getPort() { return port; }
    public void setPort(long port) { this.port = port; }
    public String getProtocol() { return protocol; }
    public void setProtocol(String protocol) { this.protocol = protocol; }
    public long getBytes() { return bytes; }
    public void setBytes(long bytes) { this.bytes = bytes; }
    public Instant getTimestamp() { return timestamp; }
    public void setTimestamp(Instant timestamp) { this.timestamp = timestamp; }
    public String getMessage() { return message; }
    public void setMessage(String message) { this.message = message; }
    public String getRawLog() { return rawLog; }
    public void setRawLog(String rawLog) { this.rawLog = rawLog; }

    @Override
    public String toString() {
        return "RawNetworkLog{" +
                "id='" + id + '\'' +
                ", srcIP='" + srcIP + '\'' +
                ", destIP='" + destIP + '\'' +
                ", port=" + port +
                ", protocol='" + protocol + '\'' +
                ", bytes=" + bytes +
                ", timestamp=" + timestamp +
                ", message='" + message + '\'' +
                ", rawLog='" + rawLog + '\'' +
                '}';
    }
}